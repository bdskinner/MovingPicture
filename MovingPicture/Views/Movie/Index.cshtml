

@model IEnumerable<MovingPicture.Models.Movie>

@using PagedList;
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";

    var pagedList = (IPagedList)Model;
}

<br /><br />
<h2>Movie Listing</h2>
<br /><br />

@using (Html.BeginForm())
{
    <div id="FilterSearch" class="form-horizontal">
        <!-- Search by Title Textbox. -->
        <div class="form-group">
            @Html.Label("Search b Title:", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBox("searchCriteria", null, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.Label("Filter by Genre:", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("genrefilter", new SelectList(ViewBag.Genres), "All Genres", new { @class = "form-control" })
        </div>

        <!-- "Search" and "Reset" Buttons. -->
        <br />
        <div class="form-group">
            <input type="submit" value="Find Movies" class="btn col-md-2 col-md-offset-2" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <input type="button" value="Reset Movie List" onclick="location.href='@Url.Action("Index", "Movie")'" class="btn col-md-2 col-md-offset-2" />
        </div>
    </div>
}

<br /><br />
Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<br />

<p>
    @*@Html.ActionLink("Create New", "Create")*@
    <div class="form-group">
        <input type="submit" value="Create New" onclick="location.href='@Url.Action("Create", "Movie")'" class="btn btn-default" />
    </div>
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Title).ToString(), "Index", new { sortOrder = "Title" })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.GenreTitle)*@            
            @Html.ActionLink(@Html.DisplayNameFor(model => model.GenreTitle).ToString(), "Index", new { sortOrder = "Genre" })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.MovieLength).ToString(), "Index", new { sortOrder = "Length" })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GenreTitle)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MovieLength) min.
        </td>
        <td>
            @*@Html.ActionLink("Edit", "Edit", new { id=item.MovieID }) |
            @Html.ActionLink("Details", "Details", new { id=item.MovieID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.MovieID })*@

            <input type="button" value="Details" class="btn btn-default" onclick="location.href='@Url.Action("Details", "Movie", new { id = item.MovieID })'" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <input type="button" value="Edit" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Movie", new { id = item.MovieID })'" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <input type="button" value="Delete" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "Movie", new { id = item.MovieID })'" />
        </td>
    </tr>
}

</table>
